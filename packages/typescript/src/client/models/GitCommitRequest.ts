/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface GitCommitRequest
 */
export interface GitCommitRequest {
  /**
   *
   * @type {string}
   * @memberof GitCommitRequest
   */
  author: string
  /**
   *
   * @type {string}
   * @memberof GitCommitRequest
   */
  email: string
  /**
   *
   * @type {string}
   * @memberof GitCommitRequest
   */
  message: string
  /**
   *
   * @type {string}
   * @memberof GitCommitRequest
   */
  path: string
}

/**
 * Check if a given object implements the GitCommitRequest interface.
 */
export function instanceOfGitCommitRequest(
  value: object,
): value is GitCommitRequest {
  if (!('author' in value) || value['author'] === undefined) return false
  if (!('email' in value) || value['email'] === undefined) return false
  if (!('message' in value) || value['message'] === undefined) return false
  if (!('path' in value) || value['path'] === undefined) return false
  return true
}

export function GitCommitRequestFromJSON(json: any): GitCommitRequest {
  return GitCommitRequestFromJSONTyped(json, false)
}

export function GitCommitRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GitCommitRequest {
  if (json == null) {
    return json
  }
  return {
    author: json['author'],
    email: json['email'],
    message: json['message'],
    path: json['path'],
  }
}

export function GitCommitRequestToJSON(json: any): GitCommitRequest {
  return GitCommitRequestToJSONTyped(json, false)
}

export function GitCommitRequestToJSONTyped(
  value?: GitCommitRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    author: value['author'],
    email: value['email'],
    message: value['message'],
    path: value['path'],
  }
}
