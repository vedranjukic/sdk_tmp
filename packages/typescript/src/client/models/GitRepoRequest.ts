/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface GitRepoRequest
 */
export interface GitRepoRequest {
  /**
   *
   * @type {string}
   * @memberof GitRepoRequest
   */
  password?: string
  /**
   *
   * @type {string}
   * @memberof GitRepoRequest
   */
  path: string
  /**
   *
   * @type {string}
   * @memberof GitRepoRequest
   */
  username?: string
}

/**
 * Check if a given object implements the GitRepoRequest interface.
 */
export function instanceOfGitRepoRequest(
  value: object,
): value is GitRepoRequest {
  if (!('path' in value) || value['path'] === undefined) return false
  return true
}

export function GitRepoRequestFromJSON(json: any): GitRepoRequest {
  return GitRepoRequestFromJSONTyped(json, false)
}

export function GitRepoRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GitRepoRequest {
  if (json == null) {
    return json
  }
  return {
    password: json['password'] == null ? undefined : json['password'],
    path: json['path'],
    username: json['username'] == null ? undefined : json['username'],
  }
}

export function GitRepoRequestToJSON(json: any): GitRepoRequest {
  return GitRepoRequestToJSONTyped(json, false)
}

export function GitRepoRequestToJSONTyped(
  value?: GitRepoRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    password: value['password'],
    path: value['path'],
    username: value['username'],
  }
}
