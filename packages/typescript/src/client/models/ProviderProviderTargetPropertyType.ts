/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 */
export const ProviderProviderTargetPropertyType = {
  ProviderTargetPropertyTypeString: 'string',
  ProviderTargetPropertyTypeOption: 'option',
  ProviderTargetPropertyTypeBoolean: 'boolean',
  ProviderTargetPropertyTypeInt: 'int',
  ProviderTargetPropertyTypeFloat: 'float',
  ProviderTargetPropertyTypeFilePath: 'file-path',
} as const
export type ProviderProviderTargetPropertyType =
  (typeof ProviderProviderTargetPropertyType)[keyof typeof ProviderProviderTargetPropertyType]

export function instanceOfProviderProviderTargetPropertyType(
  value: any,
): boolean {
  for (const key in ProviderProviderTargetPropertyType) {
    if (
      Object.prototype.hasOwnProperty.call(
        ProviderProviderTargetPropertyType,
        key,
      )
    ) {
      if (
        ProviderProviderTargetPropertyType[
          key as keyof typeof ProviderProviderTargetPropertyType
        ] === value
      ) {
        return true
      }
    }
  }
  return false
}

export function ProviderProviderTargetPropertyTypeFromJSON(
  json: any,
): ProviderProviderTargetPropertyType {
  return ProviderProviderTargetPropertyTypeFromJSONTyped(json, false)
}

export function ProviderProviderTargetPropertyTypeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProviderProviderTargetPropertyType {
  return json as ProviderProviderTargetPropertyType
}

export function ProviderProviderTargetPropertyTypeToJSON(
  value?: ProviderProviderTargetPropertyType | null,
): any {
  return value as any
}

export function ProviderProviderTargetPropertyTypeToJSONTyped(
  value: any,
  ignoreDiscriminator: boolean,
): ProviderProviderTargetPropertyType {
  return value as ProviderProviderTargetPropertyType
}
