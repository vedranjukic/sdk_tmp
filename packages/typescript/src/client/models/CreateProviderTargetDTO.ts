/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { ProviderProviderInfo } from './ProviderProviderInfo'
import {
  ProviderProviderInfoFromJSON,
  ProviderProviderInfoFromJSONTyped,
  ProviderProviderInfoToJSON,
  ProviderProviderInfoToJSONTyped,
} from './ProviderProviderInfo'

/**
 *
 * @export
 * @interface CreateProviderTargetDTO
 */
export interface CreateProviderTargetDTO {
  /**
   *
   * @type {string}
   * @memberof CreateProviderTargetDTO
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof CreateProviderTargetDTO
   */
  options: string
  /**
   *
   * @type {ProviderProviderInfo}
   * @memberof CreateProviderTargetDTO
   */
  providerInfo: ProviderProviderInfo
}

/**
 * Check if a given object implements the CreateProviderTargetDTO interface.
 */
export function instanceOfCreateProviderTargetDTO(
  value: object,
): value is CreateProviderTargetDTO {
  if (!('name' in value) || value['name'] === undefined) return false
  if (!('options' in value) || value['options'] === undefined) return false
  if (!('providerInfo' in value) || value['providerInfo'] === undefined)
    return false
  return true
}

export function CreateProviderTargetDTOFromJSON(
  json: any,
): CreateProviderTargetDTO {
  return CreateProviderTargetDTOFromJSONTyped(json, false)
}

export function CreateProviderTargetDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateProviderTargetDTO {
  if (json == null) {
    return json
  }
  return {
    name: json['name'],
    options: json['options'],
    providerInfo: ProviderProviderInfoFromJSON(json['providerInfo']),
  }
}

export function CreateProviderTargetDTOToJSON(
  json: any,
): CreateProviderTargetDTO {
  return CreateProviderTargetDTOToJSONTyped(json, false)
}

export function CreateProviderTargetDTOToJSONTyped(
  value?: CreateProviderTargetDTO | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    name: value['name'],
    options: value['options'],
    providerInfo: ProviderProviderInfoToJSON(value['providerInfo']),
  }
}
