/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface GitAddRequest
 */
export interface GitAddRequest {
  /**
   * files to add (use . for all files)
   * @type {Array<string>}
   * @memberof GitAddRequest
   */
  files: Array<string>
  /**
   *
   * @type {string}
   * @memberof GitAddRequest
   */
  path: string
}

/**
 * Check if a given object implements the GitAddRequest interface.
 */
export function instanceOfGitAddRequest(value: object): value is GitAddRequest {
  if (!('files' in value) || value['files'] === undefined) return false
  if (!('path' in value) || value['path'] === undefined) return false
  return true
}

export function GitAddRequestFromJSON(json: any): GitAddRequest {
  return GitAddRequestFromJSONTyped(json, false)
}

export function GitAddRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GitAddRequest {
  if (json == null) {
    return json
  }
  return {
    files: json['files'],
    path: json['path'],
  }
}

export function GitAddRequestToJSON(json: any): GitAddRequest {
  return GitAddRequestToJSONTyped(json, false)
}

export function GitAddRequestToJSONTyped(
  value?: GitAddRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    files: value['files'],
    path: value['path'],
  }
}
