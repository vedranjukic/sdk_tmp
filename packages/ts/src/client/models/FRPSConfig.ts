/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface FRPSConfig
 */
export interface FRPSConfig {
  /**
   *
   * @type {string}
   * @memberof FRPSConfig
   */
  domain: string
  /**
   *
   * @type {number}
   * @memberof FRPSConfig
   */
  port: number
  /**
   *
   * @type {string}
   * @memberof FRPSConfig
   */
  protocol: string
}

/**
 * Check if a given object implements the FRPSConfig interface.
 */
export function instanceOfFRPSConfig(value: object): value is FRPSConfig {
  if (!('domain' in value) || value['domain'] === undefined) return false
  if (!('port' in value) || value['port'] === undefined) return false
  if (!('protocol' in value) || value['protocol'] === undefined) return false
  return true
}

export function FRPSConfigFromJSON(json: any): FRPSConfig {
  return FRPSConfigFromJSONTyped(json, false)
}

export function FRPSConfigFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FRPSConfig {
  if (json == null) {
    return json
  }
  return {
    domain: json['domain'],
    port: json['port'],
    protocol: json['protocol'],
  }
}

export function FRPSConfigToJSON(json: any): FRPSConfig {
  return FRPSConfigToJSONTyped(json, false)
}

export function FRPSConfigToJSONTyped(
  value?: FRPSConfig | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    domain: value['domain'],
    port: value['port'],
    protocol: value['protocol'],
  }
}
