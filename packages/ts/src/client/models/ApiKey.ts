/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { ApikeyApiKeyType } from './ApikeyApiKeyType'
import {
  ApikeyApiKeyTypeFromJSON,
  ApikeyApiKeyTypeFromJSONTyped,
  ApikeyApiKeyTypeToJSON,
  ApikeyApiKeyTypeToJSONTyped,
} from './ApikeyApiKeyType'

/**
 *
 * @export
 * @interface ApiKey
 */
export interface ApiKey {
  /**
   *
   * @type {string}
   * @memberof ApiKey
   */
  keyHash: string
  /**
   * Project or client name
   * @type {string}
   * @memberof ApiKey
   */
  name: string
  /**
   *
   * @type {ApikeyApiKeyType}
   * @memberof ApiKey
   */
  type: ApikeyApiKeyType
}

/**
 * Check if a given object implements the ApiKey interface.
 */
export function instanceOfApiKey(value: object): value is ApiKey {
  if (!('keyHash' in value) || value['keyHash'] === undefined) return false
  if (!('name' in value) || value['name'] === undefined) return false
  if (!('type' in value) || value['type'] === undefined) return false
  return true
}

export function ApiKeyFromJSON(json: any): ApiKey {
  return ApiKeyFromJSONTyped(json, false)
}

export function ApiKeyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ApiKey {
  if (json == null) {
    return json
  }
  return {
    keyHash: json['keyHash'],
    name: json['name'],
    type: ApikeyApiKeyTypeFromJSON(json['type']),
  }
}

export function ApiKeyToJSON(json: any): ApiKey {
  return ApiKeyToJSONTyped(json, false)
}

export function ApiKeyToJSONTyped(
  value?: ApiKey | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    keyHash: value['keyHash'],
    name: value['name'],
    type: ApikeyApiKeyTypeToJSON(value['type']),
  }
}
