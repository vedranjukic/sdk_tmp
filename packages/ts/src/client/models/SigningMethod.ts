/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 */
export const SigningMethod = {
  SigningMethodSSH: 'ssh',
  SigningMethodGPG: 'gpg',
} as const
export type SigningMethod = (typeof SigningMethod)[keyof typeof SigningMethod]

export function instanceOfSigningMethod(value: any): boolean {
  for (const key in SigningMethod) {
    if (Object.prototype.hasOwnProperty.call(SigningMethod, key)) {
      if (SigningMethod[key as keyof typeof SigningMethod] === value) {
        return true
      }
    }
  }
  return false
}

export function SigningMethodFromJSON(json: any): SigningMethod {
  return SigningMethodFromJSONTyped(json, false)
}

export function SigningMethodFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SigningMethod {
  return json as SigningMethod
}

export function SigningMethodToJSON(value?: SigningMethod | null): any {
  return value as any
}

export function SigningMethodToJSONTyped(
  value: any,
  ignoreDiscriminator: boolean,
): SigningMethod {
  return value as SigningMethod
}
