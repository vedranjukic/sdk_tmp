/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import type { Sample } from '../models/index'
import { SampleFromJSON, SampleToJSON } from '../models/index'

/**
 *
 */
export class SampleApi extends runtime.BaseAPI {
  /**
   * List samples
   * List samples
   */
  async listSamplesRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Array<Sample>>> {
    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    if (this.configuration && this.configuration.apiKey) {
      headerParameters['Authorization'] = await this.configuration.apiKey(
        'Authorization',
      ) // Bearer authentication
    }

    const response = await this.request(
      {
        path: `/sample`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(SampleFromJSON),
    )
  }

  /**
   * List samples
   * List samples
   */
  async listSamples(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Array<Sample>> {
    const response = await this.listSamplesRaw(initOverrides)
    return await response.value()
  }
}
